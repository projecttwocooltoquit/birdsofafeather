[{"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/index.js":"1","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/App.js":"2","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Nav.js":"3","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Footer.js":"4","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Login.js":"5","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Profile.js":"6","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Home.js":"7","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Signup.js":"8","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/MapContainer.js":"9","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/mutations.js":"10","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/auth.js":"11","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Card.js":"12","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/queries.js":"13","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Spiderfy.js":"14"},{"size":168,"mtime":1630455238831,"results":"15","hashOfConfig":"16"},{"size":1723,"mtime":1630809319650,"results":"17","hashOfConfig":"16"},{"size":1272,"mtime":1630628353768,"results":"18","hashOfConfig":"16"},{"size":462,"mtime":1630174172121,"results":"19","hashOfConfig":"16"},{"size":3016,"mtime":1630788681999,"results":"20","hashOfConfig":"16"},{"size":1418,"mtime":1630809776511,"results":"21","hashOfConfig":"16"},{"size":8733,"mtime":1630958309851,"results":"22","hashOfConfig":"16"},{"size":2722,"mtime":1630938341623,"results":"23","hashOfConfig":"16"},{"size":2092,"mtime":1630945261096,"results":"24","hashOfConfig":"16"},{"size":849,"mtime":1630808438999,"results":"25","hashOfConfig":"16"},{"size":720,"mtime":1630175301963,"results":"26","hashOfConfig":"16"},{"size":2146,"mtime":1630957713162,"results":"27","hashOfConfig":"16"},{"size":385,"mtime":1630630109846,"results":"28","hashOfConfig":"16"},{"size":932,"mtime":1630944524010,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4dy51",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/index.js",[],["64","65"],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/App.js",["66","67"],"import React from \"react\";\nimport \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav.js\";\nimport Footer from \"./components/Footer.js\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      {/* Wrap page elements in Router component to keep track of location state */}\n      <Router>\n        <div>\n          <Nav />\n          <div>\n            {/* Define routes to render different page components at different paths */}\n            <Route exact path=\"/\" component={Home} />\n            {/* Define a route that will take in variable data */}\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Nav.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Footer.js",["68","69"],"import React from \"react\";\n// Import hooks from React Router\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst Footer = () => {\n  // We retrieve the current `location` object data from React Router\n  const location = useLocation();\n  // We get React Router's history object so we can access and adjust browser history\n  const history = useHistory();\n  return <footer className=\"w-100 mt-auto text-dark p-4\"></footer>;\n};\n\nexport default Footer;\n","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Login.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Profile.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Home.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Signup.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/MapContainer.js",["70"],"import { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport React, { useState, useEffect } from \"react\";\nimport Spiderfy from \"./Spiderfy\";\n\nconst MapContainer = (props) => {\n  const mapStyles = {\n    width: \"50%\",\n    height: \"50%\",\n    borderStyle: \"solid\",\n    borderColor: \"green\",\n    boxShadow: \"0 0px 12px 6px gold\",\n  };\n\n  // state to contain coordinates to center the map\n  const [coordinates, setCoordinates] = useState({ lat: 10, lng: 10 });\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\n  const [clickedMarker, setClickedMarker] = useState({ lat: 10, lng: 10 });\n  const [clickedBird, setClickedBird] = useState(\"\");\n\n  // sets the coordinates of the center to whatever the center coordinate that is passed into the component\n  useEffect(() => {\n    if (props.center) {\n      setCoordinates({ lat: props.center.lat, lng: props.center.lng });\n    }\n  }, [props.center]);\n\n  const onMarkerClick = (e) => {\n    setClickedBird(e.value);\n    setClickedMarker(e.position);\n    setShowingInfoWindow(true);\n  };\n\n  // only renders markers if props are defined, otherwise renders map with no markers\n  if (props.locations) {\n    return (\n      <Map\n        google={props.google}\n        zoom={10}\n        style={mapStyles}\n        center={coordinates}\n      >\n        {props.locations.map((location, index) => (\n          <Marker\n            key={index}\n            value={location.comName}\n            position={{ lat: location.lat, lng: location.lng }}\n            onClick={(e) => onMarkerClick(e)}\n          ></Marker>\n        ))}\n        <InfoWindow visible={showingInfoWindow} position={clickedMarker}>\n          <div>\n            <h4>{clickedBird}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  } else {\n    return (\n      <Map\n        google={props.google}\n        zoom={8}\n        style={mapStyles}\n        className=\"mapStyle\"\n        initialCenter={{ lat: 47.444, lng: -122.176 }}\n      ></Map>\n    );\n  }\n};\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n})(MapContainer);\n","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/mutations.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/auth.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Card.js",["71","72","73","74"],"import React, { useState, useEffect } from \"react\";\nimport { ADD_BIRD, UPDATE_WATCHLIST } from \"../utils/mutations\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n\nconst Flickr = require(\"flickr-sdk\");\n\nconst Card = (props) => {\n  const cardStyles = {\n    width: \"100%\",\n    height: \"50%\",\n  };\n\n  const [imageSrc, setImageSrc] = useState();\n  const [addBird, { error }] = useMutation(ADD_BIRD);\n  const [updateWatchList] = useMutation(UPDATE_WATCHLIST);\n\n  var flickr = new Flickr(process.env.REACT_APP_FLICKR_API_KEY);\n  flickr.photos\n    .search({\n      text: props.sciName,\n    })\n    .then(function (res) {\n      setImageSrc(\n        `https://live.staticflickr.com/${res.body.photos.photo[1].server}/${res.body.photos.photo[1].id}_${res.body.photos.photo[1].secret}_w.jpg`\n      );\n    })\n    .catch(function (err) {\n      console.error(err);\n    });\n\n  const handleWatchList = async () => {\n    // bird gets added to db\n    try {\n      // the data here is the id that comes back - take the data and await it later and add it into the profile\n      // look at the cart code from week 22 folder 23\n      // adding a list of id's for birds in the database to the user's profile - once i'm on the profile page, need to get all the id's in the user's list and query the db for all birds with that id...\n      const { data } = await addBird({\n        variables: {\n          sciName: props.sciName,\n          comName: props.comName,\n          imgSrc: imageSrc,\n        },\n      });\n      console.log(data.addBird._id);\n      // updateWatchList(data.addBird._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"card birdCard\" style={{ width: 18 + \"rem\" }}>\n      <img\n        className=\"card-img-top\"\n        style={cardStyles}\n        src={imageSrc}\n        alt=\"Card cap\"\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.comName}</h5>\n        <p className=\"card-text\">{props.sciName}</p>\n        <button onClick={handleWatchList}>Add to Watch List</button>\n        <button>Add to Spotted List</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/queries.js",[],["75","76"],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Spiderfy.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":19,"column":7,"nodeType":"83","messageId":"84","endLine":19,"endColumn":15},{"ruleId":"81","severity":1,"message":"85","line":22,"column":7,"nodeType":"83","messageId":"84","endLine":22,"endColumn":15},{"ruleId":"81","severity":1,"message":"86","line":7,"column":9,"nodeType":"83","messageId":"84","endLine":7,"endColumn":17},{"ruleId":"81","severity":1,"message":"87","line":9,"column":9,"nodeType":"83","messageId":"84","endLine":9,"endColumn":16},{"ruleId":"81","severity":1,"message":"88","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},{"ruleId":"81","severity":1,"message":"89","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"90","line":3,"column":23,"nodeType":"83","messageId":"84","endLine":3,"endColumn":31},{"ruleId":"81","severity":1,"message":"91","line":14,"column":21,"nodeType":"83","messageId":"84","endLine":14,"endColumn":26},{"ruleId":"81","severity":1,"message":"92","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":25},{"ruleId":"77","replacedBy":"93"},{"ruleId":"79","replacedBy":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'httpLink' is assigned a value but never used.","Identifier","unusedVar","'authLink' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'Spiderfy' is defined but never used.","'useEffect' is defined but never used.","'useQuery' is defined but never used.","'error' is assigned a value but never used.","'updateWatchList' is assigned a value but never used.",["95"],["96"],"no-global-assign","no-unsafe-negation"]