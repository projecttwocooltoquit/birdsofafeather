[{"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/index.js":"1","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/App.js":"2","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Footer.js":"3","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Nav.js":"4","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Profile.js":"5","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Signup.js":"6","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Login.js":"7","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Home.js":"8","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/mutations.js":"9","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/auth.js":"10","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/MapContainer.js":"11","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Card.js":"12","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/queries.js":"13"},{"size":168,"mtime":1630455238831,"results":"14","hashOfConfig":"15"},{"size":1723,"mtime":1630635698695,"results":"16","hashOfConfig":"15"},{"size":462,"mtime":1630174172121,"results":"17","hashOfConfig":"15"},{"size":1272,"mtime":1630628353768,"results":"18","hashOfConfig":"15"},{"size":104,"mtime":1630173249097,"results":"19","hashOfConfig":"15"},{"size":2051,"mtime":1630626601663,"results":"20","hashOfConfig":"15"},{"size":2480,"mtime":1630628353768,"results":"21","hashOfConfig":"15"},{"size":8191,"mtime":1630635142563,"results":"22","hashOfConfig":"15"},{"size":645,"mtime":1630635951335,"results":"23","hashOfConfig":"15"},{"size":720,"mtime":1630175301963,"results":"24","hashOfConfig":"15"},{"size":1497,"mtime":1630628353767,"results":"25","hashOfConfig":"15"},{"size":1642,"mtime":1630636052678,"results":"26","hashOfConfig":"15"},{"size":385,"mtime":1630630109846,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4dy51",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/index.js",[],["58","59"],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/App.js",["60","61"],"import React from \"react\";\nimport \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav.js\";\nimport Footer from \"./components/Footer.js\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      {/* Wrap page elements in Router component to keep track of location state */}\n      <Router>\n        <div>\n          <Nav />\n          <div>\n            {/* Define routes to render different page components at different paths */}\n            <Route exact path=\"/\" component={Home} />\n            {/* Define a route that will take in variable data */}\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Footer.js",["62","63"],"import React from \"react\";\n// Import hooks from React Router\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst Footer = () => {\n  // We retrieve the current `location` object data from React Router\n  const location = useLocation();\n  // We get React Router's history object so we can access and adjust browser history\n  const history = useHistory();\n  return <footer className=\"w-100 mt-auto text-dark p-4\"></footer>;\n};\n\nexport default Footer;\n","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Nav.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Profile.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Signup.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Login.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/pages/Home.js",["64","65","66","67"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport MapContainer from \"../components/MapContainer\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { QUERY_PROFILES } from \"../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\n\n// import { ApolloProvider, useMutation } from \"@apollo/client\";\n\nconst API_KEY = process.env.REACT_APP_EBIRD_API_KEY;\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_PROFILES);\n  const profiles = data?.profiles || [];\n\n  const states = [\n    {\n      name: \"Alabama\",\n      abbreviation: \"AL\",\n    },\n    {\n      name: \"Alaska\",\n      abbreviation: \"AK\",\n    },\n    {\n      name: \"Arizona\",\n      abbreviation: \"AZ\",\n    },\n    {\n      name: \"Arkansas\",\n      abbreviation: \"AR\",\n    },\n    {\n      name: \"California\",\n      abbreviation: \"CA\",\n    },\n    {\n      name: \"Colorado\",\n      abbreviation: \"CO\",\n    },\n    {\n      name: \"Connecticut\",\n      abbreviation: \"CT\",\n    },\n    {\n      name: \"Delaware\",\n      abbreviation: \"DE\",\n    },\n    {\n      name: \"Florida\",\n      abbreviation: \"FL\",\n    },\n    {\n      name: \"Georgia\",\n      abbreviation: \"GA\",\n    },\n    {\n      name: \"Hawaii\",\n      abbreviation: \"HI\",\n    },\n    {\n      name: \"Idaho\",\n      abbreviation: \"ID\",\n    },\n    {\n      name: \"Illinois\",\n      abbreviation: \"IL\",\n    },\n    {\n      name: \"Indiana\",\n      abbreviation: \"IN\",\n    },\n    {\n      name: \"Iowa\",\n      abbreviation: \"IA\",\n    },\n    {\n      name: \"Kansas\",\n      abbreviation: \"KS\",\n    },\n    {\n      name: \"Kentucky\",\n      abbreviation: \"KY\",\n    },\n    {\n      name: \"Louisiana\",\n      abbreviation: \"LA\",\n    },\n    {\n      name: \"Maine\",\n      abbreviation: \"ME\",\n    },\n    {\n      name: \"Maryland\",\n      abbreviation: \"MD\",\n    },\n    {\n      name: \"Massachusetts\",\n      abbreviation: \"MA\",\n    },\n    {\n      name: \"Michigan\",\n      abbreviation: \"MI\",\n    },\n    {\n      name: \"Minnesota\",\n      abbreviation: \"MN\",\n    },\n    {\n      name: \"Mississippi\",\n      abbreviation: \"MS\",\n    },\n    {\n      name: \"Missouri\",\n      abbreviation: \"MO\",\n    },\n    {\n      name: \"Montana\",\n      abbreviation: \"MT\",\n    },\n    {\n      name: \"Nebraska\",\n      abbreviation: \"NE\",\n    },\n    {\n      name: \"Nevada\",\n      abbreviation: \"NV\",\n    },\n    {\n      name: \"New Hampshire\",\n      abbreviation: \"NH\",\n    },\n    {\n      name: \"New Jersey\",\n      abbreviation: \"NJ\",\n    },\n    {\n      name: \"New Mexico\",\n      abbreviation: \"NM\",\n    },\n    {\n      name: \"New York\",\n      abbreviation: \"NY\",\n    },\n    {\n      name: \"North Carolina\",\n      abbreviation: \"NC\",\n    },\n    {\n      name: \"North Dakota\",\n      abbreviation: \"ND\",\n    },\n    {\n      name: \"Ohio\",\n      abbreviation: \"OH\",\n    },\n    {\n      name: \"Oklahoma\",\n      abbreviation: \"OK\",\n    },\n    {\n      name: \"Oregon\",\n      abbreviation: \"OR\",\n    },\n    {\n      name: \"Pennsylvania\",\n      abbreviation: \"PA\",\n    },\n    {\n      name: \"Puerto Rico\",\n      abbreviation: \"PR\",\n    },\n    {\n      name: \"Rhode Island\",\n      abbreviation: \"RI\",\n    },\n    {\n      name: \"South Carolina\",\n      abbreviation: \"SC\",\n    },\n    {\n      name: \"South Dakota\",\n      abbreviation: \"SD\",\n    },\n    {\n      name: \"Tennessee\",\n      abbreviation: \"TN\",\n    },\n    {\n      name: \"Texas\",\n      abbreviation: \"TX\",\n    },\n    {\n      name: \"Utah\",\n      abbreviation: \"UT\",\n    },\n    {\n      name: \"Vermont\",\n      abbreviation: \"VT\",\n    },\n    {\n      name: \"Virgin Islands\",\n      abbreviation: \"VI\",\n    },\n    {\n      name: \"Virginia\",\n      abbreviation: \"VA\",\n    },\n    {\n      name: \"Washington\",\n      abbreviation: \"WA\",\n    },\n    {\n      name: \"West Virginia\",\n      abbreviation: \"WV\",\n    },\n    {\n      name: \"Wisconsin\",\n      abbreviation: \"WI\",\n    },\n    {\n      name: \"Wyoming\",\n      abbreviation: \"WY\",\n    },\n  ];\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3,\n      slidesToSlide: 3, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n      slidesToSlide: 2, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n  };\n\n  // states that listen to user's choices\n  const [counties, setCounties] = useState([]);\n  const [userStateChoice, setUserStateChoice] = useState(\"\");\n  const [userCountyChoice, setUserCountyChoice] = useState(\"\");\n  const [locationBirds, setLocationBirds] = useState([]);\n\n  const handleUserStateChoice = (e) => {\n    // grabs the value from the user selected state option\n    setUserStateChoice(e.target.value);\n  };\n\n  const handleUserCountyChoice = (e) => {\n    setUserCountyChoice(e.target.value);\n  };\n\n  useEffect(() => {\n    if (!!userCountyChoice) {\n      // Your useEffect code here to be run on update\n      let myHeaders = new Headers();\n      myHeaders.append(\"X-eBirdApiToken\", API_KEY);\n\n      let requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\",\n      };\n\n      fetch(\n        `https://api.ebird.org/v2/data/obs/${userCountyChoice}/recent?maxResults=5`,\n        requestOptions\n      )\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLocationBirds(data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }, [userCountyChoice]);\n\n  // useEffect listens to user's state choice and makes an api call using the state info to generate a list of counties\n  // sets the county state which is then used to populate the county choices dropdown\n  useEffect(() => {\n    if (!!userStateChoice) {\n      let myHeaders = new Headers();\n      myHeaders.append(\"X-eBirdApiToken\", API_KEY);\n\n      let requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\",\n      };\n      fetch(\n        `https://api.ebird.org/v2/ref/region/list/subnational2/US-${userStateChoice}`,\n        requestOptions\n      )\n        .then((response) => {\n          return response.json();\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .then((data) => {\n          setCounties(data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }, [userStateChoice]);\n\n  return (\n    <main>\n      <div className=\"flexWrap\">\n        <section className=\"menuPostion\">\n          <p className=\"lead\">\n            This is a lead paragraph. It stands out from regular paragraphs.\n          </p>\n          <div className=\"container d-flex\">\n            <select\n              id=\"state-dropdwn\"\n              className=\"form-select m-2\"\n              value={userStateChoice}\n              onChange={handleUserStateChoice}\n            >\n              <option defaultValue={userStateChoice}>Select a state</option>\n              {states.map((state) => (\n                <option key={state.abbreviation} value={state.abbreviation}>\n                  {state.name}\n                </option>\n              ))}\n            </select>\n            <select\n              id=\"county-dropdwn\"\n              className=\"form-select m-2\"\n              value={userCountyChoice}\n              onChange={handleUserCountyChoice}\n            >\n              <option defaultValue={userCountyChoice}>Select a county</option>\n              {counties.map((county) => (\n                <option key={county.code} value={county.code}>\n                  {county.name}\n                </option>\n              ))}\n            </select>\n            <button id=\"go-btn\" type=\"button\" className=\"btn btn-dark\">\n              Go\n            </button>\n          </div>\n        </section>\n        <section className=\"mapPosition\">\n          <MapContainer\n            locations={locationBirds}\n            center={locationBirds[1]}\n          ></MapContainer>\n          {locationBirds.map((bird, index) => (\n            <Card key={index} sciName={bird.sciName} comName={bird.comName} />\n          ))}\n        </section>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/mutations.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/auth.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/MapContainer.js",[],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/components/Card.js",["68","69"],"/Users/emilyrendleman/Desktop/Code/birdsofafeather/client/src/utils/queries.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":19,"column":7,"nodeType":"76","messageId":"77","endLine":19,"endColumn":15},{"ruleId":"74","severity":1,"message":"78","line":22,"column":7,"nodeType":"76","messageId":"77","endLine":22,"endColumn":15},{"ruleId":"74","severity":1,"message":"79","line":7,"column":9,"nodeType":"76","messageId":"77","endLine":7,"endColumn":17},{"ruleId":"74","severity":1,"message":"80","line":9,"column":9,"nodeType":"76","messageId":"77","endLine":9,"endColumn":16},{"ruleId":"74","severity":1,"message":"81","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":16},{"ruleId":"74","severity":1,"message":"82","line":14,"column":11,"nodeType":"76","messageId":"77","endLine":14,"endColumn":18},{"ruleId":"74","severity":1,"message":"83","line":15,"column":9,"nodeType":"76","messageId":"77","endLine":15,"endColumn":17},{"ruleId":"74","severity":1,"message":"84","line":227,"column":9,"nodeType":"76","messageId":"77","endLine":227,"endColumn":19},{"ruleId":"74","severity":1,"message":"85","line":9,"column":21,"nodeType":"76","messageId":"77","endLine":9,"endColumn":26},{"ruleId":"74","severity":1,"message":"86","line":34,"column":15,"nodeType":"76","messageId":"77","endLine":34,"endColumn":19},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'httpLink' is assigned a value but never used.","Identifier","unusedVar","'authLink' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'Carousel' is defined but never used.","'loading' is assigned a value but never used.","'profiles' is assigned a value but never used.","'responsive' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]